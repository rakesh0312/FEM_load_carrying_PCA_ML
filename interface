import pandas as pd 
import numpy as np 
import pickle
import tkinter as tk
import pickleshare
from sklearn.ensemble import RandomForestRegressor
# tkinter GUI
root = tk.Tk() 
root.title("Prediction of load carrying capacity")

canvas1 = tk.Canvas(root, width=550, height=550)
canvas1.configure(background='#e9ecef')
canvas1.pack()

# ... (rest of the GUI code)
#adding a label to the root window
label0 = tk.Label(root, text='Developed by Er. Rakesh Kumar*',font=('Futura Md Bt', 13, 'bold'),bg='#e9ecef')
canvas1.create_window(20, 20, anchor="w", window=label0)
label_phd = tk.Label(root, text='*NIT Patna, India, Email: rakeshk.ph21.ce@nitp.ac.in',font=('Futura Md Bt',12),bg='#e9ecef')
canvas1.create_window(20, 50, anchor="w",window=label_phd)
#label_city = tk.Label(root, text='India',font=('Futura Md Bt',12),bg='#e9ecef')
#canvas1.create_window(20, 80, anchor="w",window=label_city)
#label_mail = tk.Label(root, text='Email: rakeshk.ph21.ce@nitp.ac.in',font=('Futura Md Bt',12),bg='#e9ecef')
#canvas1.create_window(20, 70, anchor="w",window=label_mail)


label_input = tk.Label(root, text='Input Parameters',font=('Futura Md Bt',12,'bold','italic','underline'),bg='#e9ecef')
canvas1.create_window(20, 70, anchor="w",window=label_input)

# New_Normal_Stress label and input box
label1 = tk.Label(root, text='Input 1 ',font=('Futura Md Bt',12),bg='#e9ecef')
canvas1.create_window(20, 100, anchor="w",window=label1)

entry1 = tk.Entry (root) # create 1st entry box
canvas1.create_window(480, 100, window=entry1)

# New_D50 label and input box
label2 = tk.Label(root, text='Input 2 ',font=('Futura Md Bt',12),bg='#e9ecef')
canvas1.create_window(20, 130, anchor="w",window=label2)

entry2 = tk.Entry (root) # create 2nd entry box
canvas1.create_window(480, 130, window=entry2)

# New_FC label and input box
label3 = tk.Label(root, text='Input 3 ',font=('Futura Md Bt',12),bg='#e9ecef')
canvas1.create_window(20, 160, anchor="w",window=label3)

entry3 = tk.Entry (root) # create 3rd entry box
canvas1.create_window(480, 160, window=entry3)

# New_Length of geogrid label and input box
label4 = tk.Label(root, text='Input 4',font=('Futura Md Bt',12),bg='#e9ecef')
canvas1.create_window(20, 190, anchor="w",window=label4)

entry4 = tk.Entry (root) # create 4th entry box
canvas1.create_window(480, 190, window=entry4)

# New_Spacing between geogrid longitudinal members label and input box
label5 = tk.Label(root, text='Input 5 ',font=('Futura Md Bt',12),bg='#e9ecef')
canvas1.create_window(20, 220, anchor="w",window=label5)

entry5 = tk.Entry (root) # create 5th entry box
canvas1.create_window(480, 220, window=entry5)

# New_Spacing between geogrid transverse members label and input box
label6 = tk.Label(root, text='Input 6 ',font=('Futura Md Bt',12),bg='#e9ecef')
canvas1.create_window(20, 250, anchor="w",window=label6)

entry6 = tk.Entry (root) # create 6th entry box
canvas1.create_window(480, 250, window=entry6)

# New_Ultimate Tensile Strength of Geogrid label and input box
label7 = tk.Label(root, text='Input 7',font=('Futura Md Bt',12),bg='#e9ecef')
canvas1.create_window(20, 280, anchor="w",window=label7)

entry7 = tk.Entry (root) # create 7th entry box
canvas1.create_window(480, 280, window=entry7)

# New_Ultimate Tensile Strength of Geogrid label and input box
label8 = tk.Label(root, text='Input 8 ',font=('Futura Md Bt',12),bg='#e9ecef')
canvas1.create_window(20, 310, anchor="w",window=label8)

entry8 = tk.Entry (root) # create 7th entry box
canvas1.create_window(480, 310, window=entry8)
# New_Normal_Stress label and input box

label9 = tk.Label(root, text='Input 9 ',font=('Futura Md Bt',12),bg='#e9ecef')
canvas1.create_window(20, 340, anchor="w",window=label9)

entry9 = tk.Entry (root) # create 1st entry box
canvas1.create_window(480, 340, window=entry9)

# New_Normal_Stress label and input box
label10 = tk.Label(root, text='Input 10 ',font=('Futura Md Bt',12),bg='#e9ecef')
canvas1.create_window(20, 370, anchor="w",window=label10)

entry10 = tk.Entry (root) # create 1st entry box
canvas1.create_window(480, 370, window=entry10)

# New_Normal_Stress label and input box
label11 = tk.Label(root, text='Input 11',font=('Futura Md Bt',12),bg='#e9ecef')
canvas1.create_window(20, 400, anchor="w",window=label11)

entry11 = tk.Entry (root) # create 1st entry box
canvas1.create_window(480, 400, window=entry11)

# New_Normal_Stress label and input box
label12 = tk.Label(root, text='Input 12 ',font=('Futura Md Bt',12),bg='#e9ecef')
canvas1.create_window(20, 430, anchor="w",window=label12)

entry12 = tk.Entry (root) # create 1st entry box
canvas1.create_window(480, 430, window=entry12)
# New_Normal_Stress label and input box

label13 = tk.Label(root, text='Input 13',font=('Futura Md Bt',12),bg='#e9ecef')
canvas1.create_window(20, 460, anchor="w",window=label13)

entry13 = tk.Entry (root) # create 1st entry box
canvas1.create_window(480, 460, window=entry13)


label0000 = tk.Label(root, text='Output',font=('Futura Md Bt',12,'bold','italic','underline'),bg='#e9ecef')
canvas1.create_window(20, 490, anchor="w",window=label0000)

label_out = tk.Label(root, text='Output (load carrying capacity, kN)',font=('Futura Md Bt',12),bg='#e9ecef')
canvas1.create_window(20, 530, anchor="w",window=label_out)

#entry_out = tk.Entry (root) # create box for output
#canvas1.create_window(480, 450, window=entry_out)

def values(): 
    global New_Input_1 # our 1st input variable
    New_Input_1 = float(entry1.get())  
    
    global New_Input_2 # our 2nd input variable
    New_Input_2 = float(entry2.get())

    global New_Input_3 # our 3rd input variable
    New_Input_3 = float(entry3.get()) 

    global New_Input_4 # our 4th input variable
    New_Input_4 = float(entry4.get()) 

    global New_Input_5 # our 5th input variable
    New_Input_5 = float(entry5.get()) 

    global New_Input_6 # our 6th input variable
    New_Input_6 = float(entry6.get()) 

    global New_Input_7 # our 7th input variable
    New_Input_7 = float(entry7.get()) 
    
    global New_Input_8 # our 8th input variable
    New_Input_8 = float(entry8.get()) 
    
    global New_Input_9 # our 8th input variable
    New_Input_9 = float(entry9.get()) 
    
    global New_Input_10 # our 8th input variable
    New_Input_10 = float(entry10.get()) 
    
    global New_Input_11 # our 8th input variable
    New_Input_11 = float(entry11.get()) 
    
    global New_Input_12 # our 8th input variable
    New_Input_12 = float(entry12.get()) 
    
    global New_Input_13 # our 8th input variable
    New_Input_13 = float(entry13.get()) 
    
    import pandas as pd
import numpy as np
import pickle
import tkinter as tk
from tkinter import messagebox

# ... (rest of the code)

def values(): 
    # Validate and get the values from the entry boxes
    input_values = []
    entry_boxes = [entry1, entry2, entry3, entry4, entry5, entry6, entry7,entry8, entry9, entry10, entry11, entry12, entry13]

    for entry_box in entry_boxes:
        value = entry_box.get().strip()
        if value:
            try:
                input_values.append(float(value))
            except ValueError:
                # If the value is not a valid float, show an error message or handle it as you prefer
                messagebox.showerror("Error", "Invalid input. Please enter valid numeric values.")
                return
        else:
            # If any entry box is empty, show an error message or handle it as you prefer
            messagebox.showerror("Error", "Please fill in all the input fields.")
            return

    # If all input values are valid, proceed with prediction
    DataFrame = pd.read_excel("F:\Project\matlab\project 9 fem normalised.xlsx", header=[0])
    data = np.array([input_values])
    Input_data = pd.DataFrame(data, columns=['Input 1', 'Input 2', 'Input 3', 'Input 4', 'Input 5', 'Input 6', 'Input 7','Input 8','Input 9','Input 10','Input 11','Input 12','Input 13',])

    # Predict using the loaded Random Forest model
    Prediction_result = np.around(rfr_loaded.predict(Input_data), 2)

    # Display the prediction on the GUI
    label_Prediction = tk.Label(root, text=str(Prediction_result).lstrip('[').rstrip(']'), bg='white')
    canvas1.create_window(450, 530, anchor="w", window=label_Prediction)

# ... (rest of the code)

    # If all input values are valid, proceed with prediction
    DataFrame = pd.read_excel("F:\Project\matlab\project 9 fem normalised.xlsx", header=[0])
    data = np.array([input_values])
    Input_data = pd.DataFrame(data, columns=['Input 1', 'Input 2', 'Input 3', 'Input 4', 'Input 5', 'Input 6', 'Input 7','Input 8','Input 9','Input 10','Input 11','Input 12','Input 13'])


    # Predict using the loaded Random Forest model
    Prediction_result = np.around(rfr_loaded.predict(Input_data), 2)

    # Display the prediction on the GUI
    label_Prediction = tk.Label(root, text=str(Prediction_result).lstrip('[').rstrip(']'), bg='white')
    canvas1.create_window(450, 530, anchor="w", window=label_Prediction)

    DataFrame = pd.read_excel("F:\Project\matlab\project 9 fem normalised.xlsx",header = [0])
    data = np.array([New_Input_1, New_Input_2, New_Input_3, New_Input_4, New_Input_5, New_Input_6, New_Input_7, New_Input_8, New_Input_9, New_Input_10, New_Input_11, New_Input_12, New_Input_13,])
    Input_data = pd.DataFrame(data, columns=['Input 1', 'Input 2', 'Input 3', 'Input 4', 'Input 5', 'Input 6', 'Input ','Input 8','Input 9','Input 10','Input 11','Input 12','Input 13'])
  
    # Predict using the loaded Random Forest model
    #y_pred = rfr_loaded.predict(X_new_data)
    Prediction_result = np.around(rfr_loaded.predict(Input_data),2)
    # Predict using the loaded Random Forest model
    #Prediction_result = np.around(rfr_loaded.predict(Input_data), 2)

    # Display the prediction on the GUI
    label_Prediction = tk.Label(root, text=str(Prediction_result).lstrip('[').rstrip(']'), bg='white')
    canvas1.create_window(450, 530, anchor="w", window=label_Prediction)

# ... (rest of the GUI code)
button1 = tk.Button (root, text= 'Predict',command=values, bg='white') # button to call the 'values' command above 
canvas1.create_window(450, 490, anchor="w",window=button1)
root.mainloop()
